{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,oCAAe,CAAA;IACf,oCAAe,CAAA;AACjB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;AAED,MAAM,CAAN,IAAY,uBAIX;AAJD,WAAY,uBAAuB;IACjC,0CAAe,CAAA;IACf,0CAAe,CAAA;IACf,sCAAW,CAAA;AACb,CAAC,EAJW,uBAAuB,KAAvB,uBAAuB,QAIlC","sourcesContent":["export enum AuthenticatorType {\n  EMAIL = 'email',\n  PHONE = 'phone'\n}\n\nexport enum AuthenticatorMethodType {\n  EMAIL = 'email',\n  VOICE = 'voice',\n  SMS = 'sms'\n}\n\nexport interface TokenRequestOptions {\n  issuer: string;\n  clientId: string;\n  redirectUri: string;\n  scopes: string;\n  username?: string;\n  password?: string;\n  rememberme?: boolean;\n  refresh_token?: string\n}\n\nexport interface AuthenticatorOptions {\n  type: AuthenticatorType;\n  methodType: AuthenticatorMethodType;\n  remediation?: string;\n}\n\nexport interface VarifyOptions {\n  otp: string;\n}\nexport interface CapOktaIdxPlugin {\n  fetchTokens(data: TokenRequestOptions): Promise<any> ;\n  refreshToken(data: TokenRequestOptions): Promise<any> ;\n  selectAuthenticator(data: AuthenticatorOptions): Promise<any> ;\n  verifyOtp(data: VarifyOptions): Promise<any> ;\n  resendOtp(): Promise<any> ;\n  selectAlternateAuthenticator(data: AuthenticatorOptions): Promise<any> ;\n}\n\n"]}