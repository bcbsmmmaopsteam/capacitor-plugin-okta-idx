{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,gBAAgB,EAAG,SAAS,EAAG,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAI7E,MAAM,OAAO,aAAc,SAAQ,SAAS;IAI1C,WAAW,CAAC,IAAS;QAEnB,iCAAiC;QACjC,+BAA+B;QAE/B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,QAAQ,CAAC;gBAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;aACjC,CAAC,CAAC;YAEH,CAAC,KAAK,IAAI,EAAE;;gBACV,6BAA6B;gBAC7B,yCAAyC;gBACzC,mCAAmC;gBACnC,yCAAyC;gBACzC,MAAM,SAAS,GAAmB,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;gBAE/E,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,EAAE;oBAC1C,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;iBACvE;qBAAK,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,EAAE;oBAChD,MAAM,aAAa,GAAG;wBACpB,YAAY,cAAE,SAAS,CAAC,MAAM,0CAAE,WAAW,0CAAE,WAAW;wBACxD,aAAa,cAAE,SAAS,CAAC,MAAM,0CAAE,YAAY,0CAAE,YAAY;wBAC3D,KAAK,cAAE,SAAS,CAAC,MAAM,0CAAE,WAAW,0CAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;wBACtD,QAAQ,cAAE,SAAS,CAAC,MAAM,0CAAE,OAAO,0CAAE,OAAO;wBAC5C,UAAU,cAAE,SAAS,CAAC,MAAM,0CAAE,WAAW,0CAAE,SAAS;wBACpD,UAAU,cAAE,SAAS,CAAC,MAAM,0CAAE,WAAW,0CAAE,SAAS;qBACrD,CAAA;oBACD,OAAO,CAAC,aAAa,CAAC,CAAC;iBACxB;qBAAM;oBACL,MAAM,EAAE,CAAC;iBACV;YACH,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACf,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,SAAc,EAAE,UAAoB,EAAE,IAAS,EAAE,OAAY,EAAE,MAAW;;QACtF,MAAM,QAAQ,GAAW,IAAI,CAAC,QAAQ,CAAC;QACvC,MAAM,QAAQ,GAAW,IAAI,CAAC,QAAQ,CAAC;QACvC,MAAM,QAAQ,GAAQ,IAAI,CAAE,WAAW,CAAC,SAAS,CAAC,CAAC;QACnD,IAAI,OAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,0CAAE,MAAM,IAAG,CAAC,EAAE;YACnC,MAAM,CAAC,EAAC,OAAO,QAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,0CAAE,OAAO,EAAE,IAAI,cAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,0CAAE,IAAI,0CAAE,GAAG,EAAC,CAAC,CAAC;SAC3F;aAAK,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,MAAK,UAAU,WAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,CAAA,IAAI,aAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,0CAAE,MAAM,IAAG,CAAC,EAAE;YAC/G,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,MAAK,UAAU,EAAE;gBACpD,SAAS,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;aACjJ;SACF;aAAM,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,MAAK,yBAAyB,WAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,CAAA,IAAI,aAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,0CAAE,MAAM,IAAG,CAAC,EAAE;YAC/H,iCAAiC;YAC/B,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,MAAK,UAAU,EAAE;gBACpD,SAAS,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAC,CAAC,CAAC;aAC3F;iBAAK,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,MAAK,kBAAkB,EAAE;gBAClE,OAAO,CAAC,EAAC,WAAW,QAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,IAAI,EAAE,CAAC,CAAC;gBAClD,OAAO;aACR;SACJ;aACI,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,MAAK,mCAAmC,WAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,CAAA,IAAI,aAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,0CAAE,MAAM,IAAG,CAAC,EAAE;YACvI,MAAM,cAAc,SAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,eAAe,CAAC,CAAA;YAC9G,IAAI,cAAc,EAAE;gBAClB,SAAS,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,CAAC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,gBAAgB,CAAC,aAAa,EAAC,CAAC,CAAC;aACjH;iBAAK;gBACJ,OAAO,CAAC;oBACN,WAAW,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;oBAC3B,KAAK,0BAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,0CAAE,wBAAwB,0CAAE,KAAK,CAAC,CAAC,2CAAG,OAAO,0CAAE,KAAK;oBAC7E,WAAW,0BAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,0CAAE,wBAAwB,0CAAE,KAAK,CAAC,CAAC,2CAAG,OAAO,0CAAE,WAAW;iBAC1F,CAAC,CAAA;gBACF,OAAO;aACR;SACF;aAAM,IAAI,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,MAAK,iCAAiC,WAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,CAAA,IAAI,aAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,0CAAE,MAAM,0CAAE,MAAM,IAAG,CAAC,EAAE;YACrI,OAAO,CAAC;gBACN,WAAW,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;gBAC3B,KAAK,0BAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,0CAAE,wBAAwB,0CAAE,KAAK,CAAC,CAAC,2CAAG,OAAO,0CAAE,KAAK;gBAC7E,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW;aAErF,CAAC,CAAA;YACF,OAAO;SACV;QAED,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,EAAE;YACxC,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACpE;aAAK,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,CAAC,OAAO,EAAE;YAChD,MAAM,aAAa,GAAG;gBACpB,YAAY,cAAE,SAAS,CAAC,MAAM,0CAAE,WAAW,0CAAE,WAAW;gBACxD,aAAa,cAAE,SAAS,CAAC,MAAM,0CAAE,YAAY,0CAAE,YAAY;gBAC3D,KAAK,gBAAE,SAAS,CAAC,MAAM,4CAAE,WAAW,4CAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACtD,QAAQ,gBAAE,SAAS,CAAC,MAAM,4CAAE,OAAO,4CAAE,OAAO;gBAC5C,UAAU,gBAAE,SAAS,CAAC,MAAM,4CAAE,WAAW,4CAAE,SAAS;gBACpD,UAAU,gBAAE,SAAS,CAAC,MAAM,4CAAE,WAAW,4CAAE,SAAS;aACrD,CAAA;YACD,OAAO,CAAC,aAAa,CAAC,CAAC;SACxB;IACH,CAAC;IAED,WAAW,CAAC,SAAc;QACxB,MAAM,SAAS,GAAG,CAAC,UAAU,EAAE,yBAAyB,EAAE,mCAAmC,EAAE,iCAAiC,CAAC,CAAC;QAClI,KAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,QAAQ,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,cAAc,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;YAC9F,IAAI,QAAQ,EAAE;gBACZ,OAAO;oBACL,QAAQ;oBACR,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;iBACnB,CAAA;aACF;SACF;QACD,OAAO;IAET,CAAC;IAED,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,mBAAmB,CAAC,IAAS;QAC3B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAErC,CAAC,KAAK,IAAI,EAAE;gBACV,IAAI,OAAO,CAAC;gBACZ,IAAI,SAAS,CAAC;gBACd,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,MAAK,iCAAiC,EAAE;oBAC3D,OAAO,GAAG,EAAC,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,EAAC,CAAA;iBACzC;qBAAK;oBACJ,OAAO,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,OAAO,CAAC,CAAC,CAAC,EAAC,aAAa,EAAE,gBAAgB,CAAC,UAAU,EAAC,CAAC,CAAC,CAAC,EAAC,aAAa,EAAE,gBAAgB,CAAC,YAAY,EAAC,CAAA;iBACjI;gBACD,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACvD,MAAM,QAAQ,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,cAAc,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,iCAAiC,CAAC,CAAE,CAAC;gBACnH,IAAI,QAAQ,EAAE;oBACZ,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,EAAC,CAAC,CAAC;iBAC/E;gBACD,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAExE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACf,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,SAAS,CAAC,IAAS;QACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAErC,CAAC,KAAK,IAAI,EAAE;gBACV,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,aAAa,EAAE,gBAAgB,CAAC,WAAW,EAAE,gBAAgB,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,EAAC,CAAC,CAAC;gBAEhI,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAExE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACf,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,SAAS;QACP,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,CAAC,KAAK,IAAI,EAAE;;gBACR,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;gBACpE,IAAI,OAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,0CAAE,MAAM,IAAG,CAAC,EAAE;oBACnC,MAAM,CAAC,EAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,cAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,0CAAE,IAAI,0CAAE,GAAG,EAAC,CAAC,CAAC;iBAC3F;qBAAK;oBACJ,OAAO,CAAC;wBACN,WAAW,QAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,0CAAE,IAAI;qBACvC,CAAC,CAAA;iBACH;YAEL,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACf,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,4BAA4B,CAAC,IAAS;QACpC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAErC,CAAC,KAAK,IAAI,EAAE;gBACV,IAAI,SAAS,CAAC;gBACd,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,OAAO,EAAE;oBAC1B,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,aAAa,EAAE,gBAAgB,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,EAAC,CAAC,CAAC;iBACrH;qBAAK,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,OAAO,EAAE;oBAChC,SAAS,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,aAAa,EAAE,gBAAgB,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,EAAC,CAAC,CAAC;iBAC7H;gBACD,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAExE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACf,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAA;IACJ,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { IdxTransaction } from '@okta/okta-auth-js';\nimport { AuthenticatorKey , IdxStatus , OktaAuth } from '@okta/okta-auth-js';\n\nimport type { CapOktaIdxPlugin } from './definitions';\n\nexport class CapOktaIdxWeb extends WebPlugin implements CapOktaIdxPlugin {\n\n  private authClient: any;\n\n  fetchTokens(data: any): Promise<any> {\n\n    // window.sessionStorage.clear();\n    // window.localStorage.clear();\n\n    return new Promise((resolve, reject) => {\n      this.authClient = new OktaAuth({\n        issuer: data.issuer,\n        clientId: data.clientId,\n        redirectUri: data.redirectUri,\n        scopes: (data.scopes).split(' '),\n      });\n  \n      (async () => { \n        // authClient.clearStorage();\n        // authClient.idx.clearTransactionMeta();\n        // authClient.tokenManager.clear();\n        // authClient.transactionManager.clear();\n        const authToken: IdxTransaction = await this.authClient.idx.startTransaction();\n    \n        if (authToken.status !== IdxStatus.SUCCESS) {\n          await this.proceed(authToken, this.authClient, data, resolve, reject);\n        }else if (authToken.status === IdxStatus.SUCCESS) {\n          const tokenResponse = {\n            access_token: authToken.tokens?.accessToken?.accessToken,\n            refresh_token: authToken.tokens?.refreshToken?.refreshToken,\n            scope: authToken.tokens?.accessToken?.scopes.join(' '),\n            id_token: authToken.tokens?.idToken?.idToken,\n            token_type: authToken.tokens?.accessToken?.tokenType,\n            expires_in: authToken.tokens?.accessToken?.expiresAt\n          }\n          resolve(tokenResponse);\n        } else {\n          reject();\n        }\n      })().catch(err => {\n        reject(err);\n      });\n    })\n  }\n\n  async proceed(authToken: any, authClient: OktaAuth, data: any, resolve: any, reject: any): Promise<void> {\n    const username: string = data.username;\n    const password: string = data.password;\n    const stepData: any = this. getNextStep(authToken);\n    if (authToken?.messages?.length > 0) {\n      reject({message: authToken.messages[0]?.message, code: authToken.messages[0]?.i18n?.key});\n    }else if (stepData?.name === 'identify' && stepData?.nextStep?.inputs && stepData?.nextStep?.inputs?.length > 0) {\n      if (stepData?.nextStep.inputs[0].name === 'username') {\n        authToken = await authClient.idx.proceed({[stepData?.nextStep.inputs[0].name]: username, [stepData?.nextStep.inputs[1].name]: data.rememberme});\n      }\n    } else if (stepData?.name === 'challenge-authenticator' && stepData?.nextStep?.inputs && stepData?.nextStep?.inputs?.length > 0) {\n      // let verificationCode = '1234';\n        if (stepData?.nextStep.inputs[0].name === 'password') {\n          authToken = await authClient.idx.proceed({[stepData?.nextStep.inputs[0].name]: password});\n        }else if (stepData?.nextStep.inputs[0].name === 'verificationCode') {\n          resolve({remediation: stepData?.nextStep?.name });\n          return;\n        }\n    }\n    else if (stepData?.name === 'select-authenticator-authenticate' && stepData?.nextStep?.inputs && stepData?.nextStep?.inputs?.length > 0) {\n      const passwordOption = stepData?.nextStep?.inputs[0].options.find((res: any) => res.value === \"okta_password\")\n      if (passwordOption) {\n        authToken = await authClient.idx.proceed({[stepData?.nextStep.inputs[0].name]: AuthenticatorKey.OKTA_PASSWORD});\n      }else {\n        resolve({\n          remediation: stepData?.name,\n          email: authToken?.context?.authenticatorEnrollments?.value[0]?.profile?.email,\n          phoneNumber: authToken?.context?.authenticatorEnrollments?.value[1]?.profile?.phoneNumber\n        })\n        return;\n      }\n    } else if (stepData?.name === 'authenticator-verification-data' && stepData?.nextStep?.inputs && stepData?.nextStep?.inputs?.length > 0) {\n        resolve({\n          remediation: stepData?.name,\n          email: authToken?.context?.authenticatorEnrollments?.value[0]?.profile?.email,\n          phoneNumber: authToken.context.authenticatorEnrollments.value[1].profile.phoneNumber\n\n        })\n        return;\n    }\n\n    if (authToken.status !== IdxStatus.SUCCESS) {\n        await this.proceed(authToken, authClient, data, resolve, reject);\n    }else if (authToken.status === IdxStatus.SUCCESS) {\n      const tokenResponse = {\n        access_token: authToken.tokens?.accessToken?.accessToken,\n        refresh_token: authToken.tokens?.refreshToken?.refreshToken,\n        scope: authToken.tokens?.accessToken?.scopes.join(' '),\n        id_token: authToken.tokens?.idToken?.idToken,\n        token_type: authToken.tokens?.accessToken?.tokenType,\n        expires_in: authToken.tokens?.accessToken?.expiresAt\n      }\n      resolve(tokenResponse);\n    }\n  }\n\n  getNextStep(authToken: any) {\n    const stepOrder = ['identify', 'challenge-authenticator', 'select-authenticator-authenticate', 'authenticator-verification-data'];\n    for (let i=0; i<stepOrder.length; i++) {\n      const nextStep = authToken?.availableSteps.find((step: any) => (step.name === stepOrder[i]) );\n      if (nextStep) {\n        return {\n          nextStep,\n          name: stepOrder[i]\n        }\n      }\n    }\n    return;\n    \n  }\n\n  refreshToken(data: any): Promise<any> {\n    return new Promise((resolve) => {\n      resolve(data);\n    })\n  }\n\n  selectAuthenticator(data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      \n      (async () => { \n        let payload;\n        let authToken;\n        if (data?.remediation === 'authenticator-verification-data') {\n          payload = {methodType: data?.methodType}\n        }else {\n          payload = data?.type === 'email' ? {authenticator: AuthenticatorKey.OKTA_EMAIL} : {authenticator: AuthenticatorKey.PHONE_NUMBER}\n        }\n        authToken = await this.authClient.idx.proceed(payload);\n        const nextStep = authToken?.availableSteps.find((step: any) => (step.name === 'authenticator-verification-data') );\n        if (nextStep) {\n          authToken = await this.authClient.idx.proceed({methodType: data?.methodType});\n        }\n        await this.proceed(authToken, this.authClient, data, resolve, reject);\n\n      })().catch(err => {\n        reject(err);\n      });\n    })\n  }  \n\n  verifyOtp(data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      \n      (async () => { \n        const authToken = await this.authClient.idx.proceed({authenticator: AuthenticatorKey.OKTA_VERIFY, verificationCode: data?.otp});\n\n        await this.proceed(authToken, this.authClient, data, resolve, reject);\n\n      })().catch(err => {\n        reject(err);\n      });\n    })\n  }\n\n  resendOtp(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      (async () => { \n          const authToken = await this.authClient.idx.proceed({resend: true});\n          if (authToken?.messages?.length > 0) {\n            reject({message: authToken.messages[0].message, code : authToken.messages[0]?.i18n?.key});\n          }else {\n            resolve({\n              remediation: authToken?.nextStep?.name\n            })\n          }\n\n      })().catch(err => {\n        reject(err);\n      });\n    })\n  }\n\n  selectAlternateAuthenticator(data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      \n      (async () => { \n        let authToken;\n        if (data?.type === 'email') {\n          authToken = await this.authClient.idx.proceed({authenticator: AuthenticatorKey.OKTA_EMAIL, methodType: data?.type});\n        }else if (data?.type === 'phone') {\n          authToken = await this.authClient.idx.proceed({authenticator: AuthenticatorKey.PHONE_NUMBER, methodType: data?.methodType});\n        }\n        await this.proceed(authToken, this.authClient, data, resolve, reject);\n\n      })().catch(err => {\n        reject(err);\n      });\n    })\n  }\n}\n"]}